name: Build and Test

on: workflow_dispatch

env:
#  The name must be lowercase
  IMAGE_NAME: "microservice_fast_api"

jobs:
  environment-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 300 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=300 --statistics
      - name: Test cases Pytest
        run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: environment-testing
    outputs:
      APP_VERSION: ${{ steps.get_app_id.outputs.APP_VERSION }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get APP version
        id: get_app_id
        run: echo "::set-output name=APP_VERSION::$(cat app/core/config.py | grep 'release:' | awk '{print $4}' | sed 's/\"//g')"

      - run: echo ${{ steps.get_app_id.outputs.APP_VERSION }}

      - name: Login to GitHub Container Registry for ${{ github.repository_owner }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.get_app_id.outputs.APP_VERSION }}
          labels: microservice
